<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.bigdata.model.mapper.StoreMapper">

	<!-- StoreController -->
	<select id="getList" parameterType="map" resultType="StoreDto">
		select id_store, store_name, muslim_friendly, location_region,
			food_category, address, tel, working_time, days_closed, parking,
			image, thumb_image, lat, lng, hits, active
		from store
		where active = 1
	</select>
	
	<select id="getRecommList" parameterType="int" resultType="StoreDto">
		select id_store, store_name, muslim_friendly, location_region,
			food_category, address, tel, working_time, days_closed, parking,
			image, thumb_image, lat, lng, hits, active
		from store
		where active = 1 and id_store=#{id_store}
	</select>
	
	<select id="getLabel" parameterType="int" resultType="int">
		select label
		from django_user
		where id_user = #{id_user}		
	</select>
	
	<select id="getClusteredStores" parameterType="int" resultType="UserClusteredDto">
		select id_store
		from django_recomm
		where label = #{label}		
	</select>
	
	<select id="getDetail" parameterType="int" resultType="StoreDto">
		select p.*,
		(
			select count(*) 
			from review
			where id_store = #{id_store}
		) as reviews
		from store p
		where id_store = #{id_store} and active = 1
	</select>

	<select id="likeInfo" parameterType="map" resultType="BookmarkDto">
	    select id_bookmark, id_store, id_user, active
	    from bookmark
	    where id_store=#{id_store} and id_user=#{id_user}
	</select>
	
	<insert id="insertLike" parameterType="map">
		insert into bookmark(id_store, id_user)
		values (#{id_store}, #{id_user})
	</insert>
	
	<update id="like" parameterType="map">
		update bookmark
		set active = 1
		where id_store = #{id_store} and id_user = #{id_user}
	</update>
	
	<update id="unlike" parameterType="map">
		update bookmark
		set active = 0
		where id_store = #{id_store} and id_user = #{id_user}
	</update>
	
	<update id="hitsUp" parameterType="int">
		update store
		set hits = hits+1
		where id_store = #{id_store}
	</update>
	
	<select id="getStoreNameByIdStore" parameterType="int" resultType="string">
		select store_name
		from store
		where id_store = #{id_store} and active = 1;
	</select>
	
	<select id="getStoreAvgScore" parameterType="int" resultType="string">
		select avg(score)
		from review
		where id_store = #{id_store} and active = 1;
	</select>
	
	<select id="getStoreAddress" parameterType="int" resultType="string">
		select address
		from store
		where id_store = #{id_store} and active = 1;
	</select>	
	
</mapper>
