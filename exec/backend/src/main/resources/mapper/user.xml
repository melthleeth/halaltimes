<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.bigdata.model.mapper.UserMapper">
	
	<!-- UserController -->

	<select id="getAllUser" resultType="UserDto">
		select email, nickname, role, profile_image, id_user
		from user
	</select>
	
	<select id="getRole" parameterType="string" resultType="string">
		select role
		from user
		where email = #{email}
	</select>

	<insert id="join" parameterType="UserDto">
		insert into user (email, password, nickname, born_year, gender)
		values (#{email}, #{password}, #{nickname}, #{born_year}, #{gender})
	</insert>

	<select id="emailCheck" parameterType="string" resultType="string">
		select email
		from user
		where email = #{email}
	</select>

	<select id="nameCheck" parameterType="string" resultType="string">
		select nickname
		from user
		where nickname = #{nickname}
	</select>

	<select id="findUserInfo" parameterType="string" resultType="UserDto">
		select id_user, email, nickname, born_year, gender, profile_image
		from user
		where email=#{email}
	</select>
	
	<update id="updateNickname" parameterType="UserDto">
		update user
		set	nickname = #{nickname}
		where email = #{email}
	</update>

	<update id="updatePwd" parameterType="UserDto">
		update user
		set password = #{password}
		where email=#{email}
	</update>

	<update id="delete" parameterType="string">
		update user
		set active = 0
		where email=#{email}
	</update>

	<update id="saveImg" parameterType="UserDto">
		update user
		set profile_image = #{profile_image}
		where email=#{email}
	</update>

	<update id="deleteImg" parameterType="string">
		update user
		set profile_image = null
		where email=#{email}
	</update>

	<!-- LoginController -->
	
	<select id="login" parameterType="UserDto" resultType="UserDto">
		select email, password, nickname, role, profile_image
		from user
		where email=#{email} and active = 1
	</select>

	<select id="findPwd" parameterType="string" resultType="string">
		select password
		from user
		where email=#{email}
	</select>
	
	<select id="getStoreName" parameterType="string" resultType="string">
		select store_name
		from store join review r
		using(id_store)
		where id_review = #{id_review} and r.active = 1
	</select>
	
	<select id="getReviewList" parameterType="string" resultType="ReviewDto">
		select id_review, content, score, likeCnt, id_store,
<!-- 				case when date_format(upload_date, '%Y%m%d') = date_format(now(), '%Y%m%d') -->
<!-- 				then date_format(upload_date, '%H:%i:%s') -->
<!-- 				else date_format(upload_date, '%y.%m.%d') -->
<!-- 				end -->
				 upload_date,
<!-- 				case when date_format(update_date, '%Y%m%d') = date_format(now(), '%Y%m%d') -->
<!-- 				then date_format(update_date, '%H:%i:%s') -->
<!-- 				else date_format(update_date, '%y.%m.%d') -->
<!-- 				end  -->
				update_date,
				(
					select store_name
					from store join review r2
					using(id_store)
					where r.id_review = r2.id_review and r.active = 1
				) as store_name						
		from review r join user
		using(id_user)
		where email = #{email} and r.active = 1
		limit 5
	</select>

	<select id="getBookmarkList" parameterType="int" resultType="BookmarkDto">
		select  id_store, id_bookmark,id_user
		from bookmark b join user
		using(id_user)
		where id_user = #{id_user} and b.active = 1
		limit 5;
	</select>
	
	<select id="getIdUser" parameterType="string" resultType="int">
		select id_user
		from user
		where email = #{email} and active = 1;
	</select>
	
	<select id="getNickName" parameterType="int" resultType="string">
		select nickname
		from user
		where id_user = #{id_user} and active = 1;
	</select>
	
	<select id="getImage" parameterType="int" resultType="string">
		select profile_image
		from user
		where id_user = #{id_user} and active = 1;
	</select>
	
	<select id="getIdUserIdReview" parameterType="int" resultType="string">
		select id_user
		from review
		where id_review = #{id_review} and active = 1;
	</select>
	
</mapper>